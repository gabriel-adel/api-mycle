const con = require('../infra/con');

class Cadastro{
    recebeDados(cadastro,resp){
        const usuario = cadastro.usuario 
        
        const loginValido = usuario.length >=6; 
        
        const senha = cadastro.senha
        const senhaValido = senha.length >=6;
        
        const cpf = cadastro.cpf 
        //regex
        //const cpfValido = login.length != 11;
        
        const dataNascimento = cadastro.dataNascimento
        
        
        const nome = cadastro.nome
        //const nomeValido = nome.length >=6; 
        
        const sexo = cadastro.sexo
        //const sexoValido = sexo.length !=0; 
        

        const email = cadastro.email 
        //regex
        
        const telefone = cadastro.telefone
        //regex
        
        const celular = cadastro.celular 
        //regex

        const estado = cadastro.estado
        //const estadoValido = estado.length != null; 
        
        const cidade = cadastro.cidade
        //const cidadeValidado = cidade.length != null; 

        const bairro = cadastro.bairro
        //const bairroValidado = bairro.length != null; 

        const rua = cadastro.rua
        //const ruaValidado = rua.length != null; 
        
        const numero = cadastro.numero
        //const numeroValidado = numero.length != 0; 
        
        const cep = cadastro.cep 
        //regex

        const complemento = cadastro.complemento
        //regex

        
        const validos  = [
            {
                nome:'login',
                valido:loginValido,
                error:"login invalido"
            },
            {
                nome:'senha',
                valido:senhaValido,
                error:"senha invalida"
            }
        ]
        const error = validos.filter(campo=>!campo.valido)
        const existError = error.length

        if(existError){
            resp.status(400).json(error)
        }else{
            const hue = [
                {
                    sql:`insert into conta(usuario,senha) value('${usuario}','${senha}')`
                },
                {
                    sql:`insert into dadospessoais(cpf,dataNascimento) value('${cpf}','${dataNascimento}')`
                },
                {
                    sql:`insert into pessoa(nome,dataCadastro,sexo,id_login,id_dados_pessoais) value('${nome}',now(),'${sexo}',LAST_INSERT_ID(),LAST_INSERT_ID())`
                },
                {
                    sql:`insert into contato(email,telefone,celular,id_pessoa) value('${email}','${telefone}','${celular}',LAST_INSERT_ID())`
                },
                {
                    sql:`insert into endereco(estado,cidade,bairro,rua,numero,cep,id_pessoa,complemento) value('${estado}','${cidade}','${bairro}','${rua}','${numero}','${cep}',LAST_INSERT_ID(),'${complemento}')`
                }
            ]
            
            /* 
            const sql = `
                BEGIN;
                    insert into conta(usuario,senha) value('${usuario}','${senha}')

                    insert into dadosPessoais(cpf,dataNascimento) value('${cpf}','${dataNascimento}')
                    
                    insert into pessoa(nome,sexo,id_login,id_dados_pessoais) value('${nome}','${sexo}',LAST_INSERT_ID(),LAST_INSERT_ID());
                    
                    insert into contato(email,telefone,celular,id_pessoa) value('${email}','${telefone}','${celular}',LAST_INSERT_ID());
                    
                    insert into endereco(estado,cidade,bairro,rua,numero,cep,id_pessoa,complemento) value('${estado}','${cidade}','${bairro}','${rua}',1,'${cep}',LAST_INSERT_ID(),'${complemento}');
                COMMIT;
            `;
            */

            insert into conta(usuario,senha) value('gabriel adelar','adelar');

            insert into dadosPessoais(cpf,dataNascimento) value('123123123','1997-01-01');
                    
            insert into pessoa(nome,sexo,id_login,id_dados_pessoais) value('adel','M',LAST_INSERT_ID(),LAST_INSERT_ID());
                    
            insert into contato(email,telefone,celular,id_pessoa) value('gabriel+adear','123123123','123123123',LAST_INSERT_ID());
                    
            insert into endereco(estado,cidade,bairro,rua,numero,cep,id_pessoa,complemento) value('sp','sp','sp','sp',1,'sp',LAST_INSERT_ID(),'sp');
                






           function hue()
            hue.forEach(element => {
                con.query(element.sql,cadastro,(erro,result)=>{
                    if(erro){
                        resp.status(400).json(erro);
                    }else{
                        resp.status(201).json(result)
                        setTimeout(myFunc, 1500)            
                    }
                })    
            });
            
        }
            
    }
    
    
    /* 
    adicionaCadastro(cadastro){
        const sql = "INSERT into conta(usuario, senha) value ('$usuario',md5('$senha'))";
    }
    adicionaDadosPessoais(){
        const sql = "INSERT INTO dadospessoais(cpf,dataNascimento) value('$cpf','$dataNascimento')";
    }
    adicionaPessoa(){
        const sql = "INSERT INTO pessoa(nome,dataCadastro,sexo,id_login,id_dados_pessoais) value('$nome',now(),'$sexo','$idLogin','$idDados')";
    }
    adicionaContato(){
        const sql = "INSERT into contato(email,telefone,celular,id_pessoa) value('$email','$telefone','$celular','$idPessoa')";
    }
    adicionaEndereco(){
        const sql = "INSERT into endereco(estado,cidade,bairro,rua,numero,cep,id_pessoa,complemento) value('$estado','$cidade','$bairro','$rua','$numero','$cep','$idPessoa','$complemento')";
    }
    */

}
module.exports = new Cadastro;
/* 

$login = "INSERT into conta(usuario, senha) value ('$usuario',md5('$senha'))";
    $resultado2= mysqli_query($conexao, $login)or die(mysqli_error($conexao));
    $idLogin= mysqli_insert_id($conexao); 
    
    $dados="INSERT INTO dadospessoais(cpf,dataNascimento) value('$cpf','$dataNascimento')";
    $resultado2= mysqli_query($conexao, $dados)or die(mysqli_error($conexao));
    $idDados= mysqli_insert_id($conexao);

    $pessoa="INSERT INTO pessoa(nome,dataCadastro,sexo,id_login,id_dados_pessoais) value('$nome',now(),'$sexo','$idLogin','$idDados')";
    $resultado= mysqli_query($conexao, $pessoa)or die(mysqli_error($conexao));
    $idPessoa= mysqli_insert_id($conexao);

    
    
    $contato = "INSERT into contato(email,telefone,celular,id_pessoa) value('$email','$telefone','$celular','$idPessoa')";
    $resultado2= mysqli_query($conexao, $contato)or die(mysqli_error($conexao));
    
    $endereco = "INSERT into endereco(estado,cidade,bairro,rua,numero,cep,id_pessoa,complemento) value('$estado','$cidade','$bairro','$rua','$numero','$cep','$idPessoa','$complemento')";
$resultado2= mysqli_query($conexao, $endereco)or die(mysqli_error($conexao));


*/









{
	"usuario":"gabriel",
	"senha":"123456",
	"cpf":"123123321",
	"dataNascimento":"1997-01-01",
	"nome":"gabriel",
	"sexo":"M",
	"email":"gabriel",
	"telefone":"12312",
	"celular":"222313",
	"estado":"sp",
	"cidade":"sp",
	"bairro":"veleiros",
	"rua":"sion",
	"numero":"20",
	"cep":"04774040",
	"complemento":"hue"
	
}













const con = require('../infra/con');

class Cadastro{
    
 
    recebeDados(cadastro,resp){
        const login = cadastro.usuario 
        
        const loginValido = login.length >=6; 
        
        const senha = cadastro.senha
        const senhaValido = senha.length >=6;
        
        const cpf = cadastro.cpf 
        //regex
        //const cpfValido = login.length != 11;
        
        const dataNascimento = cadastro.dataNascimento
        
        
        const nome = cadastro.nome
        //const nomeValido = nome.length >=6; 
        
        const sexo = cadastro.sexo
        //const sexoValido = sexo.length !=0; 
        

        const email = cadastro.email 
        //regex
        
        const telefone = cadastro.telefone
        //regex
        
        const celular = cadastro.celular 
        //regex

        const estado = cadastro.estado
        //const estadoValido = estado.length != null; 
        
        const cidade = cadastro.cidade
        //const cidadeValidado = cidade.length != null; 

        const bairro = cadastro.bairro
        //const bairroValidado = bairro.length != null; 

        const rua = cadastro.rua
        //const ruaValidado = rua.length != null; 
        
        const numero = cadastro.numero
        //const numeroValidado = numero.length != 0; 
        
        const cep = cadastro.cep 
        //regex

        const complemento = cadastro.complemento
        //regex

        
        const validos  = [
            {
                nome:'login',
                valido:loginValido,
                error:"login invalido"
            },
            {
                nome:'senha',
                valido:senhaValido,
                error:"senha invalida"
            }
        ]
        const error = validos.filter(campo=>!campo.valido)
        const existError = error.length
        if(existError){
            resp.status(400).json(error)
        }else{
            
            this.login(cadastro,resp)
            
            //this.dadosPessoais(cadastro,resp)
            //this.pessoa(cadastro,resp)
            //this.contato(cadastro,resp)
            //this.endereco(cadastro,resp)
            
        }
            
    }
    login(cadastro,resp){
        let usuario = cadastro.usuario 
        let senha = cadastro.senha
        console.log(usuario,senha)
        const sql = `insert into conta(usuario,senha) value('${usuario}','${senha}')`;
        con.query(sql,cadastro,(erro,result)=>{
            if(erro){
                resp.status(400).json(erro);
            }else{
                resp.status(201).json(result)
                dadosPessoais(cadastro,resp,result.insertId)
                
            }
        })
    
    }
    dadosPessoais(cadastro,resp,idConta){
        const cpf = cadastro.cpf 
        const dataNascimento = cadastro.dataNascimento
        console.log(cpf,dataNascimento);
        const sql = `insert into dadosPessoais(cpf,dataNascimento) value('${cpf}','${dataNascimento}')`;
        con.query(sql,cadastro,(erro,result)=>{
            if(erro){
                resp.status(400).json(erro);
            }else{
                resp.status(201).json(result)
                this.pessoa(cadastro,resp,idConta,result.insertId)
            }

        })
    
    }
    pessoa(cadastro,resp,idConta,idDados){
        const nome = cadastro.nome
        const sexo = cadastro.sexo
        
        console.log(nome,sexo);
        const sql = `insert into pessoa(nome,sexo,id_login,id_dados_pessoais) value('${nome}','${sexo}',${idConta},${idDados});`;
        
        con.query(sql,cadastro,(erro,result)=>{
            if(erro){
                resp.status(400).json(erro);
            }else{
                resp.status(201).json(result)
                this.contato()           
            }
        })
    
    }
    contato(cadastro,resp){
        const email = cadastro.email 
        const telefone = cadastro.telefone
        const celular = cadastro.celular 
        
        const sql = `insert into contato(email,telefone,celular,id_pessoa) value('${email}','${telefone}','${celular}',LAST_INSERT_ID());`;
        con.query(sql,cadastro,(erro,result)=>{
            if(erro){
                resp.status(400).json(erro);
            }else{
                resp.status(201).json(result)
            }
        })
    }
    endereco(cadastro,resp){
        const estado = cadastro.estado
        const cidade = cadastro.cidade
        const bairro = cadastro.bairro
        const rua = cadastro.rua
        const numero = cadastro.numero
        const cep = cadastro.cep 
        const complemento = cadastro.complemento
        
        const sql = `insert into endereco(estado,cidade,bairro,rua,numero,cep,id_pessoa,complemento) value('${estado}','${cidade}','${bairro}','${rua}','${numero}','${cep}',LAST_INSERT_ID(),'${complemento}');`;
        con.query(sql,cadastro,(erro,result)=>{
            if(erro){
                resp.status(400).json(erro);
            }else{
                resp.status(201).json(result)
            }
        })
    
    }
}
module.exports = new Cadastro;



"nomeProduto":"teste2",    
            "cor":"teste2",            
            "valorAtacad":"70.00",    
            "valorVarejo":"70.00",    
            "descProduto":"asdasd", 
            "codigoProduto":"asd",  
            "dataProduto":now(),     
            "tamanhoMinimo":2,   
            "tamanhoMaximo":2,  
            "tag":"produto",






            {
	"usuario":"gabriel",
	"senha":"123456",
	"cpf":"47425396807",
	"dataNascimento":"1997-01-01",
	"nome":"gabriel",
	"sexo":"M",
	"email":"gabriel",
	"telefone":"12312",
	"celular":"222313",
	"estado":"sp",
	"cidade":"sp",
	"bairro":"veleiros",
	"rua":"sion",
	"numero":"20",
	"cep":"04774040",
	"complemento":"hue"
	
}